// Navy ~ 0.1-lite
// ^^^ First comment should provide a NavyJS version

// Meta tag
[OVERLAY name = HorizontalLevels, ctx = Canvas, author = digash, version = 1.0.0]

function draw(ctx) {
  const data = $core.data;
  const layout = $core.layout;
  const fullChart = $core.fullChart;
  const fillColor = $props.color
  const isMobile = window?.innerWidth < 720

  if (!$core.hub.mainOv.data || !$core.hub.mainOv.data?.length) {
    return void 0;
  }

  const currentPrice = $core.hub.mainOv.data[$core.hub.mainOv.data.length - 1][3];

  for (let i = 0; i < data.length; i++) {
    const [timestamp, value, ,timeframe] = data[i];

    if (!timestamp) {
      continue;
    }

    const y = layout.value2y(value);
    const x = layout.ti2x(timestamp);

    ctx.lineWidth = fullChart ? 2 : 1;
    ctx.strokeStyle = fillColor;

    ctx.beginPath();
    ctx.moveTo(x, y);
    ctx.lineTo(layout.width, y);
    ctx.stroke();
    ctx.fill();

    // Draw text
    ctx.font = isMobile ? '8px Quantico' : fullChart ? '8px Quantico' : '10px Quantico';
    ctx.fillStyle = fillColor;
    ctx.textAlign = 'center';
    ctx.textBaseline = 'middle';

    if (value > currentPrice) {
      ctx.fillText(`${value} ${timeframe ?? ''}`, x, y - 10);
    } else {
      ctx.fillText(`${value} ${timeframe ?? ''}`, x, y + 10);
    }
  }
}


function legend(x) {
  return '';
}

let initialLow = 0;
let initialHigh = 0;
static yRange(data) {
  let len = data.length
  var h, l, high = -Infinity, low = Infinity
  for(var i = 0; i < len; i++) {
    let point = data[i]
    if (point[2] > high) high = point[2]
    if (point[3] < low) low = point[3]
  }
  return [high, low]
}
